# Generated by Django 2.0.dev20170429230021 on 2017-04-30 19:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Atelier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nom', models.CharField(max_length=65)),
                ('Date_inscription', models.DateTimeField(default=django.utils.timezone.now)),
                ('Date_premium', models.DateTimeField(default=django.utils.timezone.now)),
                ('Places', models.PositiveIntegerField(default=0)),
                ('Messages', models.TextField()),
                ('Chef_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ateliers_commentaires',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ateliers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Atelier')),
            ],
        ),
        migrations.CreateModel(
            name='ateliers_lieux',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ateliers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Atelier')),
            ],
        ),
        migrations.CreateModel(
            name='ateliers_themes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ateliers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Atelier')),
            ],
        ),
        migrations.CreateModel(
            name='Chef',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ateliers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Atelier')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Commentaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Titre', models.CharField(max_length=65)),
                ('Messages', models.TextField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Electromenager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=65)),
            ],
        ),
        migrations.CreateModel(
            name='Etape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=65)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=65)),
            ],
        ),
        migrations.CreateModel(
            name='inscription_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Lieu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nom', models.CharField(max_length=65)),
                ('Adresse', models.CharField(max_length=65)),
                ('Telephone', models.CharField(max_length=65)),
                ('CodePostal', models.PositiveIntegerField(default=0)),
                ('Ville', models.CharField(max_length=65)),
            ],
        ),
        migrations.CreateModel(
            name='paricipants_atelier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inscription_logs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.inscription_log')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Recette',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Titre', models.CharField(max_length=65)),
                ('Temps_preparation', models.DateTimeField(default=django.utils.timezone.now)),
                ('Temps_cuisson', models.DateTimeField(default=django.utils.timezone.now)),
                ('Nombre_portions', models.PositiveIntegerField(default=0)),
                ('Difficulte', models.PositiveIntegerField(default=0)),
                ('Cout', models.FloatField(default=0)),
                ('Remarques', models.CharField(max_length=255)),
                ('Date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='recettes_commentaires',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentaires', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Commentaire')),
                ('recettes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Recette')),
            ],
        ),
        migrations.CreateModel(
            name='recettes_electromenager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('elctromenagers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Electromenager')),
                ('recettes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Recette')),
            ],
        ),
        migrations.CreateModel(
            name='recettes_etapes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etapes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Etape')),
                ('recettes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Recette')),
            ],
        ),
        migrations.CreateModel(
            name='recettes_ingredients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredients', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Ingredient')),
                ('recettes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Recette')),
            ],
        ),
        migrations.CreateModel(
            name='recettes_ustensiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recettes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Recette')),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=65)),
            ],
        ),
        migrations.CreateModel(
            name='Types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=65)),
            ],
        ),
        migrations.CreateModel(
            name='Ustensile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=65)),
            ],
        ),
        migrations.AddField(
            model_name='recettes_ustensiles',
            name='ustensiles',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Ustensile'),
        ),
        migrations.AddField(
            model_name='recette',
            name='Commentaires',
            field=models.ManyToManyField(through='polls.recettes_commentaires', to='polls.Commentaire'),
        ),
        migrations.AddField(
            model_name='recette',
            name='Electromenager',
            field=models.ManyToManyField(through='polls.recettes_electromenager', to='polls.Electromenager'),
        ),
        migrations.AddField(
            model_name='recette',
            name='Etapes',
            field=models.ManyToManyField(through='polls.recettes_etapes', to='polls.Etape'),
        ),
        migrations.AddField(
            model_name='recette',
            name='Ingredients',
            field=models.ManyToManyField(through='polls.recettes_ingredients', to='polls.Ingredient'),
        ),
        migrations.AddField(
            model_name='recette',
            name='Type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Types'),
        ),
        migrations.AddField(
            model_name='recette',
            name='Ustensiles',
            field=models.ManyToManyField(through='polls.recettes_ustensiles', to='polls.Ustensile'),
        ),
        migrations.AddField(
            model_name='recette',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inscription_log',
            name='participants',
            field=models.ManyToManyField(through='polls.paricipants_atelier', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='inscription_log',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fuck', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ateliers_themes',
            name='themes',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Theme'),
        ),
        migrations.AddField(
            model_name='ateliers_lieux',
            name='lieux',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Lieu'),
        ),
        migrations.AddField(
            model_name='ateliers_commentaires',
            name='commentaires',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Commentaire'),
        ),
        migrations.AddField(
            model_name='atelier',
            name='Commentaires',
            field=models.ManyToManyField(through='polls.ateliers_commentaires', to='polls.Commentaire'),
        ),
        migrations.AddField(
            model_name='atelier',
            name='Lieux',
            field=models.ManyToManyField(through='polls.ateliers_lieux', to='polls.Lieu'),
        ),
        migrations.AddField(
            model_name='atelier',
            name='Themes',
            field=models.ManyToManyField(through='polls.ateliers_themes', to='polls.Theme'),
        ),
    ]
